<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.scrcu</groupId>
  <artifactId>usrp</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>

  <!-- 继承spring boot父包 -->
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.3.RELEASE</version>
    <relativePath/>
  </parent>

  <!-- 自定义变量 -->
  <properties>
    <java.version>1.8</java.version>
    <shiro.version>1.4.0</shiro.version>
    <druid.version>1.1.10</druid.version>
    <ehcache.version>2.10.4</ehcache.version>
    <mybatis.version>3.1.1</mybatis.version>
    <fastjson.version>1.2.83</fastjson.version>
  </properties>

  <dependencies>
    <!-- springboot web依赖 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>spring-boot-starter-logging</artifactId>
          <groupId>org.springframework.boot</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- springboot log4j2依赖 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
    </dependency>
    <!-- springboot aop依赖 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <!-- springboot jdbc依赖 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>
    <!-- springboot 热加载 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- Spring Boot 缓存支持启动器 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
    <!-- springBoot tomcate依赖(springboot内置的tomcat容器)
         scope设置为provided，表明在没有使用外部tomcat时，便使用内置tomcat容器，
         如果使用外部tomcat，则不使用内置tomcat容器 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <scope>provided</scope>
    </dependency>
    <!--tomcat-embed-jasper依赖是为内置的上述内置的tomcat提供jsp的支持，
        在本地启动项目时，将<scope>provided</scope>注释掉-->
    <dependency>
      <groupId>org.apache.tomcat.embed</groupId>
      <artifactId>tomcat-embed-jasper</artifactId>
      <!--<scope>provided</scope>-->
    </dependency>
    <!-- servlet依赖 -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jstl</artifactId>
    </dependency>
    <!--项目打成war后，启动项目会jar包冲突，故将servlet-api依赖设置为<scope>provided</scope>，
        在本地启动项目时，需要将<scope>provided</scope>注释掉-->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.3</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid-spring-boot-starter</artifactId>
      <version>${druid.version}</version>
    </dependency>
    <!-- 阿里FASTJSON依赖 -->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
    </dependency>
    <!--阿里 EasyExcel-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>easyexcel</artifactId>
      <version>1.1.1</version>
      <exclusions>
        <exclusion>
          <groupId>commons-beanutils</groupId>
          <artifactId>commons-beanutils</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- shiro依赖 -->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-ehcache</artifactId>
      <version>${shiro.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-spring</artifactId>
      <version>${shiro.version}</version>
    </dependency>
    <!-- shiro整合cas单点 -->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-cas</artifactId>
      <version>1.2.4</version>
    </dependency>
    <!-- ehcache依赖 -->
    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache</artifactId>
      <version>${ehcache.version}</version>
    </dependency>
    <!-- mybatisplus依赖 -->
    <dependency>
      <groupId>com.baomidou</groupId>
      <artifactId>mybatis-plus-boot-starter</artifactId>
      <version>3.1.2</version>
    </dependency>
    <!-- mybatis-plus 代码生成器的模板引擎 默认是velocity -->
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.28</version>
    </dependency>
    <!-- mybatis-plus 代码生成器的模板引擎 默认是velocity -->
    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity-engine-core</artifactId>
      <version>2.0</version>
    </dependency>
    <!-- MySql依赖 -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>
    <!-- DB2、Oracle、TD数据库的jdbc jar包需要本地手动导入
        导入说明以及jdbc jar包已上传至 监管报送svn目录 ../15杂项/jdbc_jar/
    -->
    <!-- DB2 -->
    <dependency>
      <groupId>com.ibm.db2</groupId>
      <artifactId>db2jcc</artifactId>
      <version>8.1</version>
    </dependency>
    <!-- 未导入db2jcc4.jar -->
    <dependency>
      <groupId>com.ibm.db2</groupId>
      <artifactId>db2jcc_license_cu</artifactId>
      <version>9.7</version>
    </dependency>
    <!-- oracle -->
    <dependency>
      <groupId>com.oracle</groupId>
      <artifactId>ojdbc14</artifactId>
      <version>10.2.0.1.0</version>
    </dependency>
    <!-- TeraData -->
    <dependency>
      <groupId>com.teradata.jdbc</groupId>
      <artifactId>tdgssconfig</artifactId>
      <version>14.00.00.14</version>
    </dependency>
    <dependency>
      <groupId>com.teradata.jdbc</groupId>
      <artifactId>terajdbc4</artifactId>
      <version>16.10.00.07</version>
    </dependency>

    <!--彭俊涛导入的包-->
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.6</version>
    </dependency>
    <!--贺鹏飞导入的包-->
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch</artifactId>
      <version>0.1.54</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>3.17</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>3.17</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <version>1.9.7</version>
    </dependency>
  </dependencies>
  <build>
    <!-- 指定war包名称,以此处为准,否则会带上版本号  -->
    <finalName>usrp</finalName>
    <plugins>
      <!-- 添加Spring boot编译插件  -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <mainClass>com.scrcu.UsrpApplication</mainClass>
        </configuration>
      </plugin>
      <!-- compiler插件, 设定JDK版本 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.2</version>
        <configuration>
          <source>${java.version}</source><!-- 源代码使用的JDK版本 -->
          <target>${java.version}</target>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      <!-- resource插件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <configuration>
          <resources>
            <resource>
              <directory>src/main/resources</directory>
              <!--<includes>
                  <include>config/*.properties</include>
                  <include>config/*.yml</include>
                  <include>config/*.xml</include>
                  <include>mapper/**/*.xml</include>
                  &lt;!&ndash;<include>static/**/*.css</include>&ndash;&gt;
                  <include>*.xml</include>
              </includes>-->
              <!--<filtering>true</filtering>-->
            </resource>
          </resources>
        </configuration>
      </plugin>
      <!-- war打包插件,设定war包名称不带版本号 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <warName>${project.artifactId}</warName>
          <!-- 对丢失web.xml检测机制进行忽略，动态Web模块3.0工程时代不需要web.xml文件注册相关内容的，所以工程默认不生成web.xml-->
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <!-- 将类文件打成jar包 -->
          <archiveClasses>false</archiveClasses>
          <!-- 将资源文件打到classes目录下 -->
          <webResources>
            <resource>
              <directory>src/main/webapp</directory>
              <!--<targetPath>WEB-INF</targetPath>-->
              <filtering>true</filtering>
            </resource>
          </webResources>
          <warSourceDirectory>WebRoot</warSourceDirectory>
        </configuration>
      </plugin>
      <!-- Spring boot 热部署 -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <fork>true</fork>
          <addResources>true</addResources>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>